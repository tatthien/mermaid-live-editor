import MinusIcon from '@/components/icons/minus'
import PlusIcon from '@/components/icons/plus'
import RefreshIcon from '@/components/icons/refresh'
import Editor from '@monaco-editor/react'
import mermaid from 'mermaid'
import type { MermaidConfig } from 'mermaid'
import { Inter } from 'next/font/google'
import Head from 'next/head'
import { useEffect, useRef, useState, MouseEvent, MouseEventHandler, ReactNode } from 'react'
import { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch'

const inter = Inter({ subsets: ['latin'] })

const ActionButton = (props: { icon: ReactNode; text: string; onClick: MouseEventHandler }) => {
  return (
    <button
      className='inline-flex cursor-pointer items-center justify-center gap-1 rounded border border-slate-200 bg-slate-50 p-0.5 text-sm text-slate-600 shadow-sm transition hover:bg-slate-100 focus:outline-none focus:ring focus:ring-slate-300 focus:ring-offset-1'
      onClick={props.onClick}
      aria-label={`${props.text} button`}>
      {props.icon}
    </button>
  )
}

export default function Home() {
  const previewRef = useRef<HTMLDivElement>(null)
  const editorRef = useRef(null)
  const [content, setContent] = useState('')

  const editorOptions = {
    minimap: { enabled: false },
    fontSize: 14,
  }

  mermaid.initialize({
    startOnLoad: true,
    securityLevel: 'strict',
    theme: 'neutral',
    flowchart: {
      useMaxWidth: false,
    },
    htmlLabels: true,
  } as MermaidConfig)

  useEffect(() => {
    if (previewRef.current && content) {
      mermaid.contentLoaded()
      previewRef.current.removeAttribute('data-processed')
    }
  }, [content])

  function handleEditorChange(value) {
    setContent(value)
  }

  function btnDownloadSVGHandler() {
    console.log(1)
  }
  return (
    <>
      <Head>
        <title>Mermadi Live Editor</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className={`${inter.className} flex h-screen flex-col overflow-y-hidden`}>
        <div className='sticky top-0 z-10 w-full border-b px-2 py-1'>
          <div className='font-semibold'>Mermaid Live Editor</div>
        </div>
        <main className='relative grid flex-1 grid-cols-12'>
          <div className='col-span-4 border-r md:col-span-3'>
            <div>
              <Editor
                height='100vh'
                options={editorOptions}
                onChange={handleEditorChange}
                onMount={(editor) => (editorRef.current = editor)}
              />
            </div>
          </div>
          <div className='relative col-span-8 h-full bg-gray-50 md:col-span-9'>
            <TransformWrapper minScale={0.5} centerZoomedOut={true} centerOnInit={true}>
              {({ zoomIn, zoomOut, resetTransform }) => (
                <>
                  <TransformComponent contentClass='bg-dotted tr-comp' wrapperClass='tr-wrapper'>
                    <div className='flex h-full w-full items-center justify-center'>
                      <div ref={previewRef} className='mermaid'>
                        {content}
                      </div>
                    </div>
                  </TransformComponent>
                  <div className='absolute bottom-[60px] left-[20px]'>
                    <div className='flex flex-col gap-1'>
                      <ActionButton onClick={() => zoomIn()} icon={<PlusIcon />} text='Zoom in' />
                      <ActionButton onClick={() => zoomOut()} icon={<MinusIcon />} text='Zoom out' />
                      <ActionButton onClick={() => resetTransform()} icon={<RefreshIcon />} text='Reset' />
                    </div>
                  </div>
                </>
              )}
            </TransformWrapper>
          </div>
        </main>
      </div>
    </>
  )
}
